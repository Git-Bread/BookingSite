@using BookingSite.Models.ViewModels
@model List<PublicRoomViewModel>

<div class="container mt-4">
    <h2 class="mb-4">Available Rooms</h2>
    
    <div class="row">
        @foreach (var room in Model)
        {
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0">@room.Name</h5>
                    </div>
                    <div class="card-body">
                        <p><strong>Location:</strong> @room.Location</p>
                        <p><strong>Open Days:</strong> @GetOpenDaysDisplay(room.OpenDays)</p>
                        
                        @if (room.AvailableTimeSlots.Any())
                        {
                            <h6 class="mt-3">Available Time Slots:</h6>
                            <div class="list-group">
                                @foreach (var timeSlot in room.AvailableTimeSlots)
                                {
                                    <div class="list-group-item">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <span>@timeSlot.StartTime.ToString("HH:mm") - @timeSlot.EndTime.ToString("HH:mm")</span>
                                            <span class="badge bg-success">Available</span>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-info mt-3">
                                No available time slots at the moment.
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    string GetOpenDaysDisplay(string openDays)
    {
        if (string.IsNullOrWhiteSpace(openDays)) return "Not set";
        try
        {
            return string.Join(", ", openDays.Split(',', StringSplitOptions.RemoveEmptyEntries)
                .Select(d => int.TryParse(d, out int day) ? 
                    System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.DayNames[(day - 1) % 7] : 
                    null)
                .Where(d => d != null));
        }
        catch
        {
            return "Invalid format";
        }
    }
} 