@model List<ApplicationUser>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

<div class="container">
    <h2 class="mb-4">Admin Dashboard</h2>

    <ul class="nav nav-tabs mb-4" id="adminTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">
                <i class="fas fa-chart-line me-2"></i>Overview
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="rooms-tab" data-bs-toggle="tab" data-bs-target="#rooms" type="button" role="tab">
                <i class="fas fa-door-open me-2"></i>Room Management
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="users-tab" data-bs-toggle="tab" data-bs-target="#users" type="button" role="tab">
                <i class="fas fa-users me-2"></i>User Management
            </button>
        </li>
    </ul>

    <div class="tab-content" id="adminTabContent">
        <!-- Overview Tab -->
        <div class="tab-pane fade show active" id="overview" role="tabpanel">
            <div class="row">
                <div class="col-md-4 mb-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title"><i class="fas fa-users me-2"></i>Total Users</h5>
                            <p class="card-text display-4">@Model.Count</p>
                        </div>
                    </div>
                </div>
                <!-- Add more statistics cards here -->
            </div>
        </div>

        <!-- Rooms Tab -->
        <div class="tab-pane fade" id="rooms" role="tabpanel">
            <div class="alert alert-info">
                <i class="fas fa-info-circle me-2"></i>Room management functionality coming soon.
            </div>
        </div>

        <!-- Users Tab -->
        <div class="tab-pane fade" id="users" role="tabpanel">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>Email</th>
                            <th>Roles</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>@user.Email</td>
                                <td>
                                    @if (await UserManager.IsInRoleAsync(user, "Admin"))
                                    {
                                        <span class="badge bg-primary">Admin</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">User</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        @if (!await UserManager.IsInRoleAsync(user, "Admin"))
                                        {
                                            <form asp-action="PromoteToAdmin" asp-route-userId="@user.Id" method="post" class="d-inline">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-outline-primary" title="Promote to Admin">
                                                    <i class="fas fa-user-shield"></i>
                                                </button>
                                            </form>
                                        }
                                        @{
                                            var isCurrentUser = user.Id == (string)ViewData["CurrentUserId"];
                                            var adminEmail = Environment.GetEnvironmentVariable("ADMIN_EMAIL") ?? string.Empty;
                                            var isOriginalAdmin = user.Email == adminEmail;
                                        }
                                        @if (!isCurrentUser)
                                        {
                                            <form asp-action="DeleteUser" asp-route-userId="@user.Id" method="post" class="d-inline ms-1"
                                                  onsubmit="return confirm('Are you sure you want to delete this user? This will remove all their data.');">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete User">
                                                    <i class="fas fa-user-minus"></i>
                                                </button>
                                            </form>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Preserve active tab after page reload
        document.addEventListener('DOMContentLoaded', function() {
            const hash = window.location.hash;
            if (hash) {
                const tab = document.querySelector(`[data-bs-target="${hash}"]`);
                if (tab) {
                    const tabInstance = new bootstrap.Tab(tab);
                    tabInstance.show();
                }
            }
        });

        // Update URL hash when changing tabs
        const tabEls = document.querySelectorAll('button[data-bs-toggle="tab"]');
        tabEls.forEach(tabEl => {
            tabEl.addEventListener('shown.bs.tab', event => {
                const target = event.target.getAttribute('data-bs-target');
                window.location.hash = target;
            });
        });
    </script>
} 