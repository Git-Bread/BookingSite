@model List<ApplicationUser>
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Admin Dashboard";
    var rooms = ViewData["Rooms"] as List<Room>;

    string GetOpenDaysDisplay(string openDays)
    {
        if (string.IsNullOrWhiteSpace(openDays)) return "Not set";
        try
        {
            return string.Join(", ", openDays.Split(',', StringSplitOptions.RemoveEmptyEntries)
                .Select(d => int.TryParse(d, out int day) ? 
                    System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.DayNames[((day + 5) % 7)] : 
                    null)
                .Where(d => d != null));
        }
        catch
        {
            return "Invalid format";
        }
    }
}

<div class="container mt-4">
    <h2 class="mb-4">Admin Dashboard</h2>

    <ul class="nav nav-tabs" id="adminTabs" role="tablist">
        <li class="nav-item" role="presentation">
            <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab">
                <i class="fas fa-chart-line me-2"></i>Overview
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="rooms-tab" data-bs-toggle="tab" data-bs-target="#rooms" type="button" role="tab">
                <i class="fas fa-door-open me-2"></i>Room Management
            </button>
        </li>
        <li class="nav-item" role="presentation">
            <button class="nav-link" id="users-tab" data-bs-toggle="tab" data-bs-target="#users" type="button" role="tab">
                <i class="fas fa-users me-2"></i>User Management
            </button>
        </li>
    </ul>

    <div class="tab-content mt-3" id="adminTabContent">
        <!-- Overview Tab -->
        <div class="tab-pane fade show active" id="overview" role="tabpanel">
            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Total Users</h5>
                            <p class="card-text display-4">@Model.Count</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">Total Rooms</h5>
                            <p class="card-text display-4">@(rooms?.Count ?? 0)</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Rooms Tab -->
        <div class="tab-pane fade" id="rooms" role="tabpanel">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h3>Room Management</h3>
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createRoomModal">
                    <i class="fas fa-plus"></i> Create Room
                </button>
            </div>

            <div class="row">
                @if (rooms != null && rooms.Any())
                {
                    foreach (var room in rooms)
                    {
                        <div class="col-md-6 mb-4">
                            <div class="card room-card" data-room-id="@room.Id">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0">@room.Name</h5>
                                    <div class="btn-group">
                                        <button class="btn btn-sm btn-outline-primary edit-room-days" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#editRoomDaysModal"
                                                data-room-id="@room.Id"
                                                data-room-name="@room.Name"
                                                data-open-days="@room.OpenDays">
                                            <i class="fas fa-calendar-alt"></i>
                                        </button>
                                        <button class="btn btn-sm btn-outline-danger delete-room"
                                                data-room-id="@room.Id"
                                                data-room-name="@room.Name">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <p><strong>Location:</strong> @room.Location</p>
                                    <p><strong>Open Days:</strong> @GetOpenDaysDisplay(room.OpenDays)</p>
                                    <button class="btn btn-outline-primary manage-timeslots" data-room-id="@room.Id">
                                        <i class="fas fa-clock"></i> Manage Time Slots
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col">
                        <div class="alert alert-info">
                            No rooms have been created yet. Click the "Create Room" button to add a room.
                        </div>
                    </div>
                }
            </div>

            <div id="timeSlotManagementContainer"></div>
        </div>

        <!-- Users Tab -->
        <div class="tab-pane fade" id="users" role="tabpanel">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">User Management</h5>
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Username</th>
                                    <th>Email</th>
                                    <th>Role</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model)
                                {
                                    <tr>
                                        <td>@user.UserName</td>
                                        <td>@user.Email</td>
                                        <td>
                                            @if (await UserManager.IsInRoleAsync(user, "Admin"))
                                            {
                                                <span class="badge bg-primary">Admin</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">User</span>
                                            }
                                        </td>
                                        <td>
                                            @if (!await UserManager.IsInRoleAsync(user, "Admin"))
                                            {
                                                <form asp-action="PromoteToAdmin" method="post" style="display: inline;">
                                                    <input type="hidden" name="userId" value="@user.Id" />
                                                    <button type="submit" class="btn btn-sm btn-outline-primary">
                                                        <i class="fas fa-user-shield"></i> Make Admin
                                                    </button>
                                                </form>
                                            }
                                            @if (user.Id != ViewData["CurrentUserId"]?.ToString())
                                            {
                                                <form asp-action="DeleteUser" method="post" style="display: inline;">
                                                    <input type="hidden" name="userId" value="@user.Id" />
                                                    <button type="submit" class="btn btn-sm btn-outline-danger" onclick="return confirm('Are you sure you want to delete this user?')">
                                                        <i class="fas fa-trash"></i> Delete
                                                    </button>
                                                </form>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Room Modal -->
<div class="modal fade" id="createRoomModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Room</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createRoomForm">
                    <div class="mb-3">
                        <label for="roomName" class="form-label">Room Name</label>
                        <input type="text" class="form-control" id="roomName" required>
                    </div>
                    <div class="mb-3">
                        <label for="roomLocation" class="form-label">Location</label>
                        <input type="text" class="form-control" id="roomLocation" required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Open Days</label>
                        <div class="day-picker-group" role="group">
                            @for (int i = 1; i <= 7; i++)
                            {
                                var dayName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.DayNames[((i + 5) % 7)];
                                <input type="checkbox" class="btn-check" id="day@(i)" value="@i" @(i <= 5 ? "checked" : "")>
                                <label class="btn btn-outline-primary" for="day@(i)">@dayName</label>
                            }
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveRoom">Create Room</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Room Days Modal -->
<div class="modal fade" id="editRoomDaysModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Open Days</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Select open days for <span id="editRoomName"></span>:</p>
                <div class="day-picker-group" role="group">
                    @for (int i = 1; i <= 7; i++)
                    {
                        var dayName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.DayNames[((i + 5) % 7)];
                        <input type="checkbox" class="btn-check edit-day" id="editDay@(i)" value="@i">
                        <label class="btn btn-outline-primary" for="editDay@(i)">@dayName</label>
                    }
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveRoomDays">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<style>
    .btn-group {
        flex-wrap: wrap;
        gap: 1px; /* Add small gap between buttons when wrapped */
    }

    .btn-group .btn {
        border-radius: 4px !important; /* Override Bootstrap's radius removal */
        margin: -1px; /* Compensate for double borders */
    }

    .btn-group .btn-outline-primary {
        transition: background-color 0.15s ease-in-out;
    }

    .room-card {
        transition: all 0.3s ease;
    }

    .room-card.selected {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }

    /* Day picker specific styles */
    .day-picker-group {
        display: flex;
        flex-wrap: wrap;
        gap: 2px;
        width: 100%;
    }

    .day-picker-group .btn {
        flex: 1 1 calc(14.28% - 2px); /* 7 days with gap */
        min-width: fit-content;
    }
</style>

@section Scripts {
    <script src="~/js/adminDashboard.js"></script>
} 